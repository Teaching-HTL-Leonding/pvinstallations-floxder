// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace pvinstallations_floxder.Migrations
{
    [DbContext(typeof(PvDbContext))]
    partial class PvDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InstallationLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PvInstallationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PvInstallationID");

                    b.ToTable("InstallationLogs");
                });

            modelBuilder.Entity("ProductionReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("BatteryWattage")
                        .HasColumnType("real");

                    b.Property<float>("GridWattage")
                        .HasColumnType("real");

                    b.Property<float>("HouseholdWattage")
                        .HasColumnType("real");

                    b.Property<float>("ProducedWattage")
                        .HasColumnType("real");

                    b.Property<int>("PvInstallationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PvInstallationID");

                    b.ToTable("ProductionReports");
                });

            modelBuilder.Entity("PvInstallation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PvInstallations");
                });

            modelBuilder.Entity("InstallationLog", b =>
                {
                    b.HasOne("PvInstallation", "PvInstallation")
                        .WithMany()
                        .HasForeignKey("PvInstallationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PvInstallation");
                });

            modelBuilder.Entity("ProductionReport", b =>
                {
                    b.HasOne("PvInstallation", "PvInstallation")
                        .WithMany("ProductionReports")
                        .HasForeignKey("PvInstallationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PvInstallation");
                });

            modelBuilder.Entity("PvInstallation", b =>
                {
                    b.Navigation("ProductionReports");
                });
#pragma warning restore 612, 618
        }
    }
}
